#*******************************************************************************
# Licensed Materials - Property of IBM
# (c) Copyright IBM Corp. 2022. All Rights Reserved.
#
# Note to U.S. Government Users Restricted Rights:
# Use, duplication or disclosure restricted by GSA ADP Schedule
# Contract with IBM Corp.
#*******************************************************************************
---

- name: "[{{current_step_name}}]: Launch shell {{sh_file}} using a JCL"
  block:

    - name: "[{{current_step_name}}]: Push {{deploy_dir_local}}/{{sh_file}} to USS: {{ deploy_dir_uss }}"
      shell: | 
         zowe zos-files upload file-to-uss {{deploy_dir_local}}/{{sh_file}} {{ deploy_dir_uss }}/{{sh_file}}\
           --zosmf-profile {{ zowe_profile }}
      delegate_to: localhost

    - name: "[{{current_step_name}}]: Create JCL {{deploy_dir_local}}/{{inventory_hostname}}.{{jcl_file}}"
      template:
        src: "{{jcl_file}}.j2"
        dest: "{{deploy_dir_local}}/{{inventory_hostname}}.{{jcl_file}}"  
      ignore_errors: true
      delegate_to: localhost

    - name: "[{{current_step_name}}]: Run JCL to execute {{sh_file}} file : {{deploy_dir_local}}/{{inventory_hostname}}.{{jcl_file}}" 
      shell: | 
         zowe zos-jobs submit local-file {{deploy_dir_local}}/{{inventory_hostname}}.{{jcl_file}}\
           --zosmf-profile {{ zowe_profile }}\
           --rff jobid\
           --rft string
      delegate_to: localhost    
      register: exec_jcl_result 
      ignore_errors: true
      
    - name: "[{{current_step_name}}]: Collect the JCL execution result"
      set_fact:
        zowe_jobid: "{{exec_jcl_result.stdout}}"
        zowe_jclname: "{{deploy_dir_local}}/{{inventory_hostname}}.{{jcl_file}}" 
        task_step_result: "{{ task_step_result | combine ({'exec_jcl_result': exec_jcl_result}) }}"

    - name: "[{{current_step_name}}]: Check the JCL execution result"
      set_fact:
        deploy_result_tasks_steps: "{{ deploy_result_tasks_steps + [ task_step_result ] }}"        
      when: exec_jcl_result is failed

    - name: "[{{current_step_name}}]: Retrieve the JCL execution status" 
      shell: |
         zowe zos-jobs view job-status-by-jobid {{zowe_jobid}}\
           --zosmf-profile {{ zowe_profile }}\
           --rff retcode\
           --rft string
      delegate_to: localhost    
      register: zowe_jcl_retcode 
      ignore_errors: true    
      when: exec_jcl_result is succeeded

    - name: "[{{current_step_name}}]: Collect the JCL execution return code"
      set_fact:
        zowe_retcode: "{{zowe_jcl_retcode.stdout}}"
        task_step_result: "{{ task_step_result | combine ({'zowe_jcl_retcode': zowe_jcl_retcode.stdout}) }}"
      when: exec_jcl_result is succeeded

    - name: "[{{current_step_name}}]: Register execution JCL return code"
      set_fact:
        deploy_result_tasks_steps: "{{ deploy_result_tasks_steps + [ task_step_result ] }}"  
      when: exec_jcl_result is succeeded      

    - name : "[{{current_step_name}}]: Retrieve the JCL execution logs"
      include_tasks: "output_jcl.yml"
      when: exec_jcl_result is succeeded
      
    - name: "[{{current_step_name}}]: Check if execution JCL succeeded"
      fail:
        msg: "The JCL submitting shell {{sh_file}} failed"
      when: exec_jcl_result is failed or (zowe_retcode == "JCL ERROR") or (zowe_retcode | regex_replace('CC ') | int > 0) or  (zowe_retcode | regex_search('ABEND') is none == false)

  tags:
    - exec-sh-jcl
