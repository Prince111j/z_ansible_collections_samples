################################################################################
# Copyright (c) IBM Corporation 2021
################################################################################

################################################################################
# requirement-check role that reads the local file runtime-requirements.txt to
# determine the if the controllers installed Ansible version on the controller
# is a match to the version identified in runtime-requirements.txt
#
# Note: The perferred way to have implemented this role would have been done
# with Python packaging.specifiers.SpecifierSet() from lib pacakging
# `pip install packaging` but would introduce a dependency.
################################################################################
---
# - name: Parse the registry for collection entries
#   include_vars: runtime-requirements.txt

# - name: DEBUG(-v) Display if Ansible collection version for this playbook requirement passed
#   fail:
#     msg: "{{item.msg}}"
#   loop: "{{result_collection_status.results}}"
#   loop_control:
#     label: "{{ item.msg }}"
#   # when: result_collection_status.results |selectattr('msg', 'contains', 'FAIL')

# - name: DEBUG(-v) Display collection version check
#   ansible.builtin.debug:
#     msg: "{{item.msg}}"
#   loop: "{{result_collection_status.results}}"
#   loop_control:
#     label: "{{ item.msg }}"
#  # when: result_collection_status.results |selectattr('msg', 'contains', 'FAIL')


# - fail:
#     msg: "{{result_ansible_check.msg}}"
#   when: result_ansible_check.msg is regex("FAIL")

# - fail:
#     msg: "{{foo}}"
#   when: foo is regex("FAIL")


# - name: DEBUG(-v) Display collection version check
#   fail:
#     msg: "{{item.msg}}"
#   loop: "{{result_collection_status.results}}"
#   loop_control:
#     label: "{{ item.msg }}"
#   when: item.msg is regex("FAIL")


#############################################
# - name: Ansible requirement check completed
#   assert:
#     that:
#         ansible_version_checks|dict2items|selectattr('value.failed', 'equalto', False)|list|length > 0
#     success_msg: "[SUCCESS] Ansible version {{ ansible_version.major|int }}.{{ ansible_version.minor|int }}.{{ ansible_version.revision|int }} is installed."
#     fail_msg: "[FAIL] This playbook requires Ansible {{ansible_version_checks[item].version}} and version {{ ansible_version.major|int }}.{{ ansible_version.minor|int }}.{{ ansible_version.revision|int }} is installed."
#     quiet: true
#   register: result_ansible_status
#   with_items: "{{ansible_version_checks}}"

# - name: DEBUG(-v) Display Ansible version check
#   ansible.builtin.debug:
#       msg: "{{item.msg}}"
#   loop: "{{result_ansible_status.results}}"
#   loop_control:
#     label: "{{ item.msg }}"
